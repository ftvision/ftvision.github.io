---
layout: single
title: vBird Book Notes
permalink: /vBird
modified: 2017-03-24
---

## 鸟哥笔记

#### 操作系统核心(Kernel)
操作系统(Operating System, OS)其实也是一组程序， 这组程序的重点在於管理计算机的所有活动以及驱动系统中的所有硬件。 我们刚刚谈到计算机没有软件只是一堆废铁，那么操作系统的功能就是让CPU可以开始判断逻辑与运算数值、 让主内存可以开始载入/读出数据与程序码、让硬盘可以开始被存取、让网络卡可以开始传输数据、 让所有周边可以开始运转等等。总之，硬件的所有动作都必须要透过这个操作系统来达成就是了。

上述的功能就是操作系统的核心(Kernel)了！你的计算机能不能做到某些事情，都与核心有关！ 只有核心有提供的功能，你的计算机系统才能帮你完成！举例来说，你的核心并不支持TCP/IP的网络协定， 那么无论你购买了什么样的网卡，这个核心都无法提供网络能力的！

但是单有核心我们使用者也不知道能作啥事的～因为核心主要在管控硬件与提供相关的能力(例如网络功能)， 这些管理的动作是非常的重要的，如果使用者能够直接使用到核心的话，万一使用者不小心将核心程序停止或破坏， 将会导致整个系统的崩溃！因此核心程序所放置到内存当中的区块是受保护的！ 并且开机后就一直常驻在内存当中。

#### 系统呼叫(System Call)
既然我的硬件都是由核心管理，那么如果我想要开发软件的话，自然就得要去参考这个核心的相关功能！ 唔！如此一来不是从原本的参考硬件函数变成参考核心功能，还是很麻烦啊！有没有更简单的方法啊！

为了解决这个问题，操作系统通常会提供一整组的开发介面给工程师来开发软件！ 工程师只要遵守该开发介面那就很容易开发软件了！举例来说，我们学习C程序语言只要参考C程序语言的函式即可， 不需要再去考量其他核心的相关功能，因为核心的系统呼叫介面会主动的将C程序语言的相关语法转成核心可以了解的任务函数， 那核心自然就能够顺利运作该程序了！

简单的说，上面的图示可以带给我们底下的概念：

- 操作系统的核心层直接参考硬件规格写成， 所以同一个操作系统程序不能够在不一样的硬件架构下运作。举例来说，个人计算机版的Windows XP不能直接在RISC架构的计算机下运作。 所以您知道为何Windows XP又分为32位及64位的版本了吧？因为32/64位的CPU指令集不太相同， 所以当然要设计不同的操作系统版本了。

- 操作系统只是在管理整个硬件资源，包括CPU、内存、输入输出装置及档案系统档。 如果没有其他的应用程序辅助，操作系统只能让计算机主机准备妥当(Ready)而已！并无法运作其他功能。 所以你现在知道为何Windows XP上面要达成网页影像的运作还需要类似PhotoImpact或Photoshop之类的软件安装了吧？

- 应用程序的开发都是参考操作系统提供的开发介面， 所以该应用程序只能在该操作系统上面运作而已，不可以在其他操作系统上面运作的。 现在您知道为何去购买线上游戏的光盘时，光盘上面会明明白白的写著该软件适合用於哪一种操作系统上了吧？ 也该知道某些游戏为何不能够在Linux上面安装了吧？

**核心功能**

- 系统呼叫介面(System call interface)
    - 刚刚谈过了，这是为了方便程序开发者可以轻易的透过与核心的沟通，将硬件的资源进一步的利用， 於是需要有这个简易的介面来方便程序开发者。
- 程序管理(Process control)
    - 总有听过所谓的『多工环境』吧？一部计算机可能同时间有很多的工作跑到CPU等待运算处理， 核心这个时候必须要能够控制这些工作，让CPU的资源作有效的分配才行！另外， 良好的CPU排程机制(就是CPU先运作那个工作的排列顺序)将会有效的加快整体系统效能呢！
- 内存管理(Memory management)
    - 控制整个系统的内存管理，这个内存控制是非常重要的，因为系统所有的程序码与数据都必须要先存放在内存当中。 通常核心会提供虚拟内存的功能，当内存不足时可以提供内存置换(swap)的功能哩。
- 档案系统管理(Filesystem management)
    - 档案系统的管理，例如数据的输入输出(I/O)等等的工作啦！还有不同档案格式的支持啦等等， 如果你的核心不认识某个档案系统，那么您将无法使用该档案格式的档案罗！例如：Windows 98就不认识NTFS档案格式的硬盘； 
- 装置的驱动(Device drivers)
    - 就如同上面提到的，硬件的管理是核心的主要工作之一，当然罗，装置的驱动程序就是核心需要做的事情啦！ 好在目前都有所谓的『可载入模组』功能，可以将驱动程序编辑成模组，就不需要重新的编译核心啦！ 这个也会在后续的第二十章当中提到的！

**核心版本**

Linux的核心版本编号有点类似如下的样子：

```bash
2.6.18-92.el5 
主版本.次版本.释出版本-修改版本 
```
如前所述，因为对于Linux核心的开发者太多了，以致于造成Linux核心经常性的变动。 但对于一般家庭计算机或企业关键应用的话，常变动的核心并不适合的。因此托瓦兹便将核心的发展趋势分为两股， 并根据这两股核心的发展分别给予不同的核心编号，那就是：

- 主、次版本为奇数：发展中版本(development)
    - 如2.5.xx，这种核心版本主要用在测试与发展新功能，所以通常这种版本仅有核心开发工程师会使用。 如果有新增的核心程序代码，会加到这种版本当中，等到众多工程师测试没问题后，才加入下一版的稳定核心中；
- 主、次版本为偶数：稳定版本(stable)
    - 如2.6.xx，等到核心功能发展成熟后会加到这类的版本中，主要用在一般家庭计算机以及企业版本中。 重点在于提供使用者一个相对稳定的Linux作业环境平台。

至于释出版本则是在主、次版本架构不变的情况下，新增的功能累积到一定的程度后所新释出的核心版本。 而由于Linux核心是使用GPL的授权，因此大家都能够进行核心程序代码的修改。因此，如果你有针对某个版本的核心修改过部分的程序代码， 那么那个被修改过的新的核心版本就可以加上所谓的修改版本了。

Linux核心版本与distribution (下个小节会谈到) 的版本并不相同，很多朋友常常上网问到：『我的Linux是9.x版，请问....』之类的留言， 这是不对的提问方式，因为所谓的Linux版本指的应该是核心版本， 而目前最新的核心版本应该是2.6.30(2009/08) 才对，并不会有9.x的版本出现的。

妳常用的Linux系统则应该说明为distribution才对！因此，如果以CentOS这个distribution来说， 妳应该说：『我用的Linux是CentOS这个 distribution，版本为5.x 版，请问....』才对喔！

**Distribution**

为了让使用者能够接触到Linux，于是很多的商业公司或非营利团体， 就将Linux Kernel(含tools)与可运行的软件整合起来，加上自己具有创意的工具程序， 这个工具程序可以让用户以光盘/DVD或者透过网络直接安装/管理Linux系统。 这个『Kernel + Softwares + Tools的可完全安装』的咚咚，我们称之为Linux distribution， 一般中文翻译成可完全安装套件，或者Linux发布商套件等。

**各大Linux Distributions的主要异同：支持标准！** 因为每个Linux distributions使用的kernel都是http://www.kernel.org 所释出的，而他们所选择的软件，几乎都是目前很知名的软件，重复性相当的高， 例如网页服务器的Apache，电子邮件服务器的Postfix/sendmail，文件服务器的Samba等等。

此外，为了让所有的Linux distributions开发不致于差异太大，且让这些开发商在开发的时候有所依据，还有Linux Standard Base (LSB)等标准来规范开发者，以及目录架构的File system Hierarchy Standard (FHS)标准规范！ 唯一差别的，可能就是该开发者自家所开发出来的管理工具，以及套件管理的模式吧！ 

> 事实上鸟哥认为distributions主要分为两大系统，一种是使用RPM方式安装软件的系统，包括Red Hat, Fedora, SuSE等都是这类； 一种则是使用Debian的dpkg方式安装软件的系统，包括Debian, Ubuntu, B2D等等。

# 第一部分 第三章 

『在Linux系统中，每个装置都被当成一个文件来对待』 举例来说，IDE介面的硬盘的文件名称即为/dev/hd[a-d]，其中， 括号内的字母为a-d当中的任意一个，亦即有/dev/hda, /dev/hdb, /dev/hdc, 及 /dev/hdd这四个文件的意思。

| 装置 |  装置在Linux内的档名|
|---|---|
| IDE硬盘机    | /dev/hd[a-d] |
| SCSI/SATA/U盘硬盘机   | /dev/sd[a-p] |
| U盘快闪碟 | /dev/sd[a-p], (与SATA相同) |
| 软盘机   | /dev/fd[0-1] |
| 打印机   | 25针: /dev/lp[0-2]; U盘: /dev/usb/lp[0-15] |
| 鼠标  |     U盘: /dev/usb/mouse[0-15]; PS2:  /dev/psaux |
| 当前CDROM/DVDROM |  /dev/cdrom |
| 当前的鼠标 | /dev/mouse |
| 磁带机   | IDE: /dev/ht0; SCSI: /dev/st0 |

以IDE介面来说，由於一个IDE排线可以连接两个IDE装置，又通常主机都会提供两个IDE介面，因此最多可以接到四个IDE装置。 也就是说，如果你已经有一个光盘设备了，那么最多就只能再接三颗IDE介面的磁碟罗。 这两个IDE介面通常被称为IDE1(primary)及IDE2(secondary)， 而每条排线上面的IDE装置可以被区分为Master与Slave。这四个IDE装置的档名为：

| IDE\Jumper |  Master | Slave|
|-----|------|----|
| IDE1(Primary) | /dev/hda | /dev/hdb |
| IDE2(Secondary)   | /dev/hdc | /dev/hdd |

再以SATA介面来说，由於SATA/U盘/SCSI等磁碟介面都是使用SCSI模块来驱动的， 因此这些介面的磁碟装置档名都是/dev/sd[a-p]的格式。 但是与IDE介面不同的是，SATA/U盘介面的磁碟根本就没有一定的顺序，那如何决定他的装置档名呢？ 这个时候就得要根据Linux核心侦测到磁碟的顺序了！这里以底下的例子来让你了解罗。

### 主要分区与逻辑分区

其实整颗磁碟的第一个磁区特别的重要，因为他记录了整颗磁碟的重要资讯！ 磁碟的第一个磁区主要记录了两个重要的资讯，分别是：

- 主要启动记录区(Master Boot Record, MBR)：可以安装启动管理程序的地方，有446 bytes
- 分割表(partition table)：记录整颗硬盘分割的状态，有64 bytes

主要分割、扩展分配与逻辑分割的特性我们作个简单的定义罗：

- 主要分割与扩展分配最多可以有四笔(硬盘的限制)
- 扩展分配最多只能有一个(操作系统的限制)
- 逻辑分割是由扩展分配持续切割出来的分割槽；
- 能够被格式化后，作为数据存取的分割槽为主要分割与逻辑分割。扩展分配无法格式化；
- 逻辑分割的数量依操作系统而不同，在Linux系统中，IDE硬盘最多有59个逻辑分割(5号到63号)， SATA硬盘则有11个逻辑分割(5号到15号)，比如：

```
P1:/dev/hda1
P2:/dev/hda2
L1:/dev/hda5
L2:/dev/hda6
L3:/dev/hda7
L4:/dev/hda8
L5:/dev/hda9
```

简单的说，整个启动流程到操作系统之前的动作应该是这样的：

- BIOS：启动主动运行的韧体，会认识第一个可启动的装置；
- MBR：第一个可启动装置的第一个磁区内的主要启动记录区块，内含启动管理程序；
- 启动管理程序(boot loader)：一支可读取核心文件来运行的软件；
- 核心文件：开始操作系统的功能...


# 第一部分 第四章 安装CentOS，跳过
 
# 第一部分 第五章

我们前面一直谈到的是X Window的窗口管理员环境，那么在这里面有没有纯文本接口的环境啊？ 当然有啊！但是，**要怎么切换X Window与文本模式呢？**注意喔，通常我们也称文本模式为终端机接口, terminal 或 console喔！Linux默认的情况下会提供六个Terminal来让使用者登陆， 切换的方式为使用：·[Ctrl] + [Alt] + [F1]~[F6]·的组合按钮。

那这六个终端接口如何命名呢，系统会将[F1] ~ [F6]命名为`tty1` ~ `tty6`的操作接口环境。 也就是说，当你按下[crtl] + [Alt] + [F1]这三个组合按钮时 (按着[ctrl]与[Alt]不放，再按下[F1]功能键)， 就会进入到tty1的terminal界面中了。同样的[F2]就是tty2啰！那么如何回到刚刚的X窗口接口呢？很简单啊！按下[Ctrl] + [Alt] + [F7]就可以了！我们整理一下登陆的环境如下：

```
[Ctrl] + [Alt] + [F1] ~ [F6]  ：文字接口登陆 tty1 ~ tty6 终端机；
[Ctrl] + [Alt] + [F7]   ：图形接口壁纸。
```

如果你是以纯文本环境启动Linux的，默认的tty7是没有东西的！万一如此的话，那要怎么启动X窗口画面呢？ 你可以在tty1~tty6的任意一个终端接口使用你的账号登陆后(登陆的方法下一小节会介绍)， 然后下达如下的命令即可：

```
 [vbird@www ~]$ startx 
```
不过startx这个命令并非万灵丹，你要让startx生效至少需要底下这几件事情的配合：

- 你的tty7并没有其他的窗口软件正在运行(tty7必须是空出来的)；
- 你必须要已经安装了X Window system，并且X server是能够顺利启动的；
- 你最好要有窗口管理员，例如GNOME/KDE或者是阳春的TWM等；
- 启动X所必须要的服务，例如字型服务器(X Font Server, xfs)必须要先启动

#### 基本命令

- 显示日期的命令： `date`

如果在文字接口中想要知道目前Linux系统的时间，那么就直接在命令列模式输入date即可显示：

```bash
[vbird@www ~]$ date 
Mon Aug 17 17:02:52 CST 2009 
[vbird@www ~]$ date +%Y/%m/%d 
2009/08/17 
[vbird@www ~]$ date +%H:%M 
17:04 
```
- 显示日历的命令：`cal`

```bash
[vbird@www ~]$ cal 
     August 2009 
Su Mo Tu We Th Fr Sa 
                   1 
 2  3  4  5  6  7  8 
 9 10 11 12 13 14 15 
16 17 18 19 20 21 22 
23 24 25 26 27 28 29 
30 31 

[vbird@www ~]$ cal 2009 
                               2009 
 
       January               February                 March 
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa 
             1  2  3    1  2  3  4  5  6  7    1  2  3  4  5  6  7 
 4  5  6  7  8  9 10    8  9 10 11 12 13 14    8  9 10 11 12 13 14 
11 12 13 14 15 16 17   15 16 17 18 19 20 21   15 16 17 18 19 20 21 
18 19 20 21 22 23 24   22 23 24 25 26 27 28   22 23 24 25 26 27 28 
25 26 27 28 29 30 31                          29 30 31 
 
        April                   May                   June 
Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa   Su Mo Tu We Th Fr Sa 
          1  2  3  4                   1  2       1  2  3  4  5  6 
 5  6  7  8  9 10 11    3  4  5  6  7  8  9    7  8  9 10 11 12 13 
12 13 14 15 16 17 18   10 11 12 13 14 15 16   14 15 16 17 18 19 20 
19 20 21 22 23 24 25   17 18 19 20 21 22 23   21 22 23 24 25 26 27 
26 27 28 29 30         24 25 26 27 28 29 30   28 29 30 
                       31 
....(以下省略).... 

[vbird@www ~]$ cal [month] [year] 

[vbird@www ~]$ cal 10 2009 
    October 2009 
Su Mo Tu We Th Fr Sa 
             1  2  3 
 4  5  6  7  8  9 10 
11 12 13 14 15 16 17 
18 19 20 21 22 23 24 
25 26 27 28 29 30 31 
```

- 简单好用的计算器： `bc`

#### Hot Keys

- `[Tab]按键`

[Tab]按键就是在键盘的大写灯切换按键([Caps Lock])上面的那个按键！在各种Unix-Like的Shell当中， 这个[Tab]按键算是Linux的Bash shell最棒的功能之一了！他具有『命令补全』与『文件补齐』的功能喔！ 重点是，可以避免我们打错命令或文件名呢！很棒吧！但是[Tab]按键在不同的地方输入，会有不一样的结果喔！ 我们举下面的例子来说明。上一小节我们不是提到 cal 这个命令吗？如果我在命令列输入    ca 再按两次 [tab] 按键， 会出现什么信息？

```
[Tab] 接在一串命令的第一个字的后面，则为命令补全；
[Tab] 接在一串命令的第二个字以后时，则为『文件补齐』！
```

- `[Ctrl]-c 按键`

如果你在Linux底下输入了错误的命令或参数，有的时候这个命令或程序会在系统底下『跑不停』这个时候怎么办？别担心， 如果你想让当前的程序『停掉』的话，可以输入：[Ctrl]与c按键(先按着[Ctrl]不放，且再按下c按键，是组合按键)， 那就是中断目前程序的按键啦！

- `[Ctrl]-d 按键`

那么[Ctrl]-d是什么呢？就是[Ctrl]与d按键的组合啊！这个组合按键通常代表着： 『键盘输入结束(End Of File, EOF 或 End Of Input)』的意思！ 另外，他也可以用来取代exit的输入呢！例如你想要直接离开文字接口，可以直接按下[Ctrl]-d就能够直接离开了(相当于输入exit啊！)。

### 关于`man`

首先，在上个表格的第一行，你可以看到的是：『DATE(1)』，DATE我们知道是命令的名称， 那么(1)代表什么呢？他代表的是『一般用户可使用的命令』的意思！咦！还有这个用意啊！呵呵！ 没错～在查询数据的后面的数字是有意义的喔！他可以帮助我们了解或者是直接查询相关的数据。 常见的几个数字的意义是这样的：

|代号 | 代表内容 |
|----|---|
|1| 使用者在shell环境中可以操作的命令或可运行文件
|2| 系统核心可呼叫的函数与工具等
|3| 一些常用的函数(function)与函式库(library)，大部分为C的函式库(libc)
|4| 装置文件的说明，通常在/dev下的文件
|5| 配置文件或者是某些文件的格式
|6| 游戏(games)
|7| 惯例与协议等，例如Linux文件系统、网络协议、ASCII code等等的说明
|8| 系统管理员可用的管理命令
|9| 跟kernel有关的文件|

### 关机不是一件简单的事情 

此外，最大的问题是，若不正常关机，则可能造成文件系统的毁损 （因为来不及将数据回写到文件中，所以有些服务的文件会有问题！）。所以正常情况下，要关机时需要注意底下几件事：

- 观察系统的使用状态：
    - 如果要看目前有谁在在线，可以下达『who』这个命令，而如果要看网络的联机状态，可以下达 『 netstat -a 』这个命令，而要看背景运行的程序可以运行『 ps -aux 』这个命令。使用这些命令可以让你稍微了解主机目前的使用状态！当然啰，就可以让你判断是否可以关机了 （这些命令在后面Linux常用命令中会提及喔！）

- 通知在线使用者关机的时刻：
    - 要关机前总得给在线的使用者一些时间来结束他们的工作，所以，这个时候你可以使用 shutdown 的特别命令来达到此一功能。

- 正确的关机命令使用：
    - 例如 shutdown 与 reboot 两个命令！

1. 数据同步写入磁盘： sync
    - 在Linux系统中，为了加快数据的读取速度，所以在默认的情况中， 某些已经加载内存中的数据将不会直接被写回硬盘，而是先缓存在内存当中，如此一来， 如果一个数据被你重复的改写，那么由于他尚未被写入硬盘中，因此可以直接由内存当中读取出来， 在速度上一定是快上相当多的！
    - 不过，如此一来也造成些许的困扰，那就是万一你的系统因为某些特殊情况造成不正常关机 (例如停电或者是不小心踢到power)时，由于数据尚未被写入硬盘当中，哇！所以就会造成数据的升级不正常啦！ 那要怎么办呢？这个时候就需要sync这个命令来进行数据的写入动作啦！ 直接在文字接口下输入sync，那么在内存中尚未被升级的数据，就会被写入硬盘中！所以，这个命令在系统关机或重新启动之前， 很重要喔！最好多运行几次！
    - 虽然目前的 shutdown/reboot/halt 等等命令均已经在关机前进行了 sync 这个工具的呼叫， 不过，多做几次总是比较放心点～呵呵～`[root@www ~]# sync `
2. 惯用的关机命令： shutdown
    - 嗯！那么就来关机试试看吧！我们较常使用的是shutdown这个命令，而这个命令会通知系统内的各个程序 (processes)，并且将通知系统中的run-level内的一些服务来关闭。shutdown可以达成如下的工作：
        - 可以自由选择关机模式：是要关机、重新启动或进入单人操作模式均可；
        - 可以配置关机时间: 可以配置成现在立刻关机, 也可以配置某一个特定的时间才关机。
        - 可以自定义关机信息：在关机之前，可以将自己配置的信息传送给在线 user 。
        - 可以仅发出警告信息：有时有可能你要进行一些测试，而不想让其他的使用者干扰， 或者是明白的告诉使用者某段时间要注意一下！这个时候可以使用 shutdown 来吓一吓使用者，但却不是真的要关机啦！
        - 可以选择是否要 fsck 检查文件系统 。

```bash
[root@www ~]# /sbin/shutdown [-t 秒] [-arkhncfF] 时间 [警告信息] 
选项与参数： 
-t sec ： -t 后面加秒数，亦即『过几秒后关机』的意思 
-k     ： 不要真的关机，只是发送警告信息出去！ 
-r     ： 在将系统的服务停掉之后就重新启动(常用) 
-h     ： 将系统的服务停掉后，立即关机。 (常用) 
-n     ： 不经过 init 程序，直接以 shutdown 的功能来关机 
-f     ： 关机并启动之后，强制略过 fsck 的磁盘检查 
-F     ： 系统重新启动之后，强制进行 fsck 的磁盘检查 
-c     ： 取消已经在进行的 shutdown 命令内容。 
时间   ： 这是一定要加入的参数！指定系统关机的时间！时间的范例底下会说明。

[root@www ~]# /sbin/shutdown -h 10 'I will shutdown after 10 mins' 
```

3. 重新启动，关机： reboot, halt, poweroff
    - 不过，shutdown可以依据目前已启动的服务来逐次关闭各服务后才关机；至于halt却能够在不理会目前系统状况下， 进行硬件关机的特殊功能！你可以在你的主机上面使用root进行
4. 本章上头有谈到过关于run level的问题。之前谈到的是系统运行的模式，分为纯文本(run level 3)及图形接口模式(run level 5)。除了这两种模式外，有没有其他模式呢？其实Linux共有七种运行等级， 七种等级的意义我们在后面会再谈到。本章你只要知道底下四种运行等级就好了：

```
run level 0：关机
run level 3：纯文本模式
run level 5：含有图形接口模式
run level 6：重新启动
```
### 忘记root密码

先将系统重新启动，在读秒的时候按下任意键就会出现如同第四章图3.2的菜单画面，仔细看菜单底下的说明， 按下『e』就能够进入grub的编辑模式了。此时你看到的画面有点像底下这样：

```bash
root (hd0,0) 
kernel /vmlinuz-2.6.18-128.el5 ro root=LABEL=/ rhgb quiet 
initrd /initrd-2.6.18-128.el5.img 
```
此时，请将光标移动到kernel那一行，再按一次『 e 』进入kernel该行的编辑画面中， 然后在出现的画面当中，最后方输入 single ：

```bassh
kernel /vmlinuz-2.6.18-128.el5 ro root=LABEL=/ rhgb quiet single 
```
再按下『 Enter 』确定之后，按下 b 就可以启动进入单人维护模式了！ 在这个模式底下，你会在tty1的地方不需要输入密码即可取得终端机的控制权(而且是使用root的身份喔！)。 之后就能够修改root的密码了！请使用底下的命令来修改root的密码喔！

```bash
[root@www ~]# passwd 
# 接下来系统会要求你输入两次新的密码，然后再来reboot即可顺利修订root密码了！ 
```

